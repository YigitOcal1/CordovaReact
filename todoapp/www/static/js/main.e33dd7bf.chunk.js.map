{"version":3,"sources":["firebase.js","components/Login.js","components/Register.js","components/Todo.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","Login","useState","email","setEmail","password","setPassword","history","useHistory","handleSubmit","e","a","preventDefault","signInWithEmailAndPassword","push","alert","className","Card","bg","style","width","height","border","Form","onSubmit","Group","controlId","Label","Control","type","value","onChange","target","placeholder","Button","variant","size","block","to","Register","passwordConfirm","setPasswordConfirm","createUserWithEmailAndPassword","result","user","unsubscribe","Todo","text","setText","mytodos","setTodos","useEffect","doc","collection","uid","onSnapshot","docSnap","exists","data","todos","onFocus","resetInput","onClick","set","signOut","map","todo","index","class","position","right","bottom","deleteTodo","get","then","filter","update","Home","App","setUser","onAuthStateChanged","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e33dd7bf.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCVMCEMsT2gO7Vb2eRj_gRvq3ehSy7QDRM\",\n    authDomain: \"authdeneme-319b2.firebaseapp.com\",\n    projectId: \"authdeneme-319b2\",\n    storageBucket: \"authdeneme-319b2.appspot.com\",\n    messagingSenderId: \"901697971913\",\n    appId: \"1:901697971913:web:a6dfce3a3bb8d6b1a18f18\"\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\n\nexport { auth, db }","import React, { useState } from \"react\";\nimport { Card, Button, ListGroup, ListGroupItem, Form } from \"react-bootstrap\";\nimport { auth } from \"../firebase\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport \"./Components.css\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n\n      history.push(\"/todo\");\n    } catch (err) {\n      alert(\n        `There is no such account found. Register or type the correct email and password`\n      );\n    }\n  };\n\n  return (\n    <div className=\"center-div\">\n      <Card\n        bg={\"primary\"}\n        className=\"card-center\"\n        style={{ width: \"24rem\", height: \"24rem\" }}\n        border=\"dark\"\n      >\n        <div className=\"container text-center\">\n          <h3>Login</h3>\n\n          <Form onSubmit={(e) => handleSubmit(e)}>\n            <div>\n              <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    className=\"control-center\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Enter email\"\n                  />\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      value={password}\n                      onChange={(e) => setPassword(e.target.value)}\n                      placeholder=\"Password\"\n                    />\n                  </Form.Group>\n                </Form.Group>\n              </Form>\n            </div>\n            <div className=\"button-space\">\n              <Button type=\"submit\" variant=\"info\" size=\"lg\" block=\"true\">\n                Login\n              </Button>\n            </div>\n\n            <div className=\"button-space2\">\n              <Link to=\"/register\">\n                <Button variant=\"dark\" size=\"lg\" block=\"true\">\n                  Register\n                </Button>\n              </Link>\n            </div>\n          </Form>\n        </div>\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport \"./Components.css\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== passwordConfirm) {\r\n      return alert(`Passwords are the not same`);\r\n    }\r\n\r\n    try {\r\n      const result = await auth.createUserWithEmailAndPassword(email, password);\r\n      alert(`Account created with an email:${result.user.email}`);\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      alert(`Register failed. Some parts are missing`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-div\">\r\n      <Card\r\n        bg={\"secondary\"}\r\n        className=\"card-center\"\r\n        style={{ width: \"24rem\", height: \"24rem\" }}\r\n        border=\"dark\"\r\n      >\r\n        <div className=\" container text-center \">\r\n          <h3 className=\"container text-center\">Register</h3>\r\n\r\n          <Form onSubmit={(e) => handleSubmit(e)}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                className=\"control-center\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Email address\"\r\n              />\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={passwordConfirm}\r\n                  onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                  placeholder=\"Confirm Password\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Group>\r\n            <p></p>\r\n            <Button type=\"submit\" variant=\"dark\" size=\"lg\" block=\"true\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { db, auth } from \"../firebase\";\nimport { Button, Form, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Components.css\";\n\nlet unsubscribe = () => {};\n\nexport default function Todo({ user }) {\n  const [text, setText] = useState(\"\");\n  const [mytodos, setTodos] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [connectodos, setConnecttodos] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user) {\n      const doc = db.collection(\"todos\").doc(user.uid);\n      unsubscribe = doc.onSnapshot((docSnap) => {\n        if (docSnap.exists) {\n          setTodos(docSnap.data().todos);\n        }\n      });\n    } else {\n      history.push(\"/login\");\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function handleConnect(mail) {\n    user.uid = user.mail.uid;\n  }\n  const addTodo = () => {\n    db.collection(\"todos\")\n      .doc(user.uid)\n      .set({\n        todos: [...mytodos, text],\n      });\n  };\n\n  const deleteTodo = (deleteTodo) => {\n    const doc = db.collection(\"todos\").doc(user.uid);\n    doc.get().then((docSnap) => {\n      const result = docSnap.data().todos.filter((todo) => todo !== deleteTodo);\n      doc.update({\n        todos: result,\n      });\n    });\n  };\n  const resetInput = (e) => {\n    e.target.value = \"\";\n  };\n  /*<div>\n          <Form onSubmit={(e) => handleConnect()}>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>\n                {\" \"}\n                To connect your todo list with another account enter email{\" \"}\n              </Form.Label>\n              <Form.Control\n                className=\"control-center\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"Enter email\"\n              />\n            </Form.Group>\n            <ListGroup>\n              <ListGroupItem>\n                <Button type=\"submit\" variant=\"success\" size=\"lg\" block=\"true\">\n                  Connect\n                </Button>\n              </ListGroupItem>\n            </ListGroup>\n          </Form>\n        </div>*/\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"addtodowithdescription\">\n          <div className=\"form-floating mb-3 mt-5\">\n            <Form>\n              <Form.Control\n                className=\"form-control text-align-center\"\n                type=\"text\"\n                placeholder=\"Add Task\"\n                onFocus={(e) => resetInput(e)}\n                onChange={(e) => setText(e.target.value)}\n              ></Form.Control>\n            </Form>\n          </div>\n          <Button\n            className=\"button-right-space\"\n            type=\"submit\"\n            variant=\"secondary\"\n            size=\"lg\"\n            onClick={() => {\n              addTodo();\n            }}\n          >\n            Create Task\n          </Button>\n          <Button\n            className=\"button-left-space\"\n            variant=\"danger\"\n            size=\"lg\"\n            onClick={() => {\n              auth.signOut();\n              history.push(\"/login\");\n            }}\n          >\n            Logout\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"task-container\">\n        {mytodos.map((todo, index) => {\n          return (\n            <>\n              <div\n                class=\"card-wrapper mr-5\"\n                style={{ width: \"14rem\", height: \"12rem\" }}\n              >\n                <div class=\"card-top\" style={{ \"background-color\": \"gray\" }}>\n                  TASK TO DO\n                </div>\n                <div class=\"task-holder\">\n                  <p>{todo}</p>\n\n                  <div>\n                    <Button\n                      variant=\"secondary\"\n                      style={{\n                        position: \"absolute\",\n                        right: \"1px\",\n                        bottom: \"1px\",\n                      }}\n                      onClick={() => {\n                        deleteTodo(todo);\n                      }}\n                    >\n                      Delete Task\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport \"./Components.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"center-div\">\r\n      <Card\r\n        bg={\"info\"}\r\n        className=\"card-center\"\r\n        border=\"dark\"\r\n        style={{ width: \"24rem\", height: \"24rem\" }}\r\n      >\r\n        <h3 className=\"container text-center\">TODO APP</h3>\r\n        <Link to=\"/login\">\r\n          <Button className=\"button\" variant=\"dark\" size=\"lg\" block=\"true\">\r\n            Login\r\n          </Button>\r\n        </Link>\r\n        <p></p>\r\n        <Link to=\"/register\">\r\n          <Button className=\"button\" variant=\"dark\" size=\"lg\" block=\"true\">\r\n            Register\r\n          </Button>\r\n        </Link>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Todo from \"./components/Todo\";\nimport Home from \"./components/Home\";\nimport { auth } from \"./firebase\";\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) setUser(user);\n      else setUser(null);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/todo\">\n            <Todo user={user} />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}